-- Spring Batch Schema for SQLite
-- Adapted from the standard Spring Batch schema

-- BATCH_JOB_INSTANCE
CREATE TABLE BATCH_JOB_INSTANCE (
    JOB_INSTANCE_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    VERSION INTEGER,
    JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(32) NOT NULL,
    CONSTRAINT JOB_INST_UN UNIQUE (JOB_NAME, JOB_KEY)
);

-- BATCH_JOB_EXECUTION
CREATE TABLE BATCH_JOB_EXECUTION (
    JOB_EXECUTION_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    VERSION INTEGER,
    JOB_INSTANCE_ID INTEGER NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP DEFAULT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
    CONSTRAINT JOB_INST_EXEC_FK FOREIGN KEY (JOB_INSTANCE_ID)
    REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

-- BATCH_JOB_EXECUTION_PARAMS
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
    JOB_EXECUTION_ID INTEGER NOT NULL,
    TYPE_CD VARCHAR(6) NOT NULL,
    KEY_NAME VARCHAR(100) NOT NULL,
    STRING_VAL VARCHAR(250),
    DATE_VAL TIMESTAMP DEFAULT NULL,
    LONG_VAL INTEGER,
    DOUBLE_VAL REAL,
    IDENTIFYING CHAR(1) NOT NULL,
    CONSTRAINT JOB_EXEC_PARAMS_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- BATCH_STEP_EXECUTION
CREATE TABLE BATCH_STEP_EXECUTION (
    STEP_EXECUTION_ID INTEGER PRIMARY KEY AUTOINCREMENT,
    VERSION INTEGER NOT NULL,
    STEP_NAME VARCHAR(100) NOT NULL,
    JOB_EXECUTION_ID INTEGER NOT NULL,
    START_TIME TIMESTAMP NOT NULL,
    END_TIME TIMESTAMP DEFAULT NULL,
    STATUS VARCHAR(10),
    COMMIT_COUNT INTEGER,
    READ_COUNT INTEGER,
    FILTER_COUNT INTEGER,
    WRITE_COUNT INTEGER,
    READ_SKIP_COUNT INTEGER,
    WRITE_SKIP_COUNT INTEGER,
    PROCESS_SKIP_COUNT INTEGER,
    ROLLBACK_COUNT INTEGER,
    EXIT_CODE VARCHAR(2500),
    EXIT_MESSAGE VARCHAR(2500),
    LAST_UPDATED TIMESTAMP,
    CONSTRAINT JOB_EXEC_STEP_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- BATCH_STEP_EXECUTION_CONTEXT
CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
    STEP_EXECUTION_ID INTEGER NOT NULL,
    SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT TEXT,
    CONSTRAINT STEP_EXEC_CTX_FK FOREIGN KEY (STEP_EXECUTION_ID)
    REFERENCES BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
);

-- BATCH_JOB_EXECUTION_CONTEXT
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
    JOB_EXECUTION_ID INTEGER NOT NULL,
    SHORT_CONTEXT VARCHAR(2500) NOT NULL,
    SERIALIZED_CONTEXT TEXT,
    CONSTRAINT JOB_EXEC_CTX_FK FOREIGN KEY (JOB_EXECUTION_ID)
    REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- Create indexes
CREATE INDEX IDX_BATCH_JOB_INSTANCE_JOB_NAME ON BATCH_JOB_INSTANCE(JOB_NAME);
CREATE INDEX IDX_BATCH_JOB_EXECUTION_JOB_INSTANCE_ID ON BATCH_JOB_EXECUTION(JOB_INSTANCE_ID);
CREATE INDEX IDX_BATCH_STEP_EXECUTION_JOB_EXECUTION_ID ON BATCH_STEP_EXECUTION(JOB_EXECUTION_ID);